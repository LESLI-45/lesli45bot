#!/usr/bin/env python3
"""
–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•
"""

import os
import logging
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def debug_database_connection():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ DATABASE_URL"""
    
    logger.info("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê DATABASE_URL ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    database_url = os.getenv('DATABASE_URL')
    
    if not database_url:
        logger.error("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    logger.info(f"‚úÖ DATABASE_URL –Ω–∞–π–¥–µ–Ω–∞")
    logger.info(f"üîç –¢–∏–ø: {type(database_url)}")
    logger.info(f"üîç –î–ª–∏–Ω–∞: {len(database_url)}")
    logger.info(f"üîç –ü–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤: {database_url[:50]}...")
    logger.info(f"üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å–∏–º–≤–æ–ª–æ–≤: ...{database_url[-50:]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    if database_url.startswith('postgresql://'):
        logger.info("‚úÖ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å postgresql://")
    else:
        logger.error(f"‚ùå URL –ù–ï –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å postgresql://! –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {database_url[:20]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
    if 'Name:' in database_url:
        logger.error("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –í URL –µ—Å—Ç—å 'Name:' - Railway –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å!")
        logger.info("üîß –†–µ—à–µ–Ω–∏–µ: –£–±–µ—Ä–∏ 'Name:' –∏–∑ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    special_chars = ['@', ':', '/', '?', '&', '=']
    for char in special_chars:
        count = database_url.count(char)
        logger.info(f"üîç –°–∏–º–≤–æ–ª '{char}': {count} —Ä–∞–∑")
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å URL
    try:
        parts = database_url.replace('postgresql://', '').split('@')
        if len(parts) == 2:
            user_pass = parts[0]
            host_db = parts[1]
            logger.info(f"‚úÖ URL —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω:")
            logger.info(f"  üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:–ø–∞—Ä–æ–ª—å: {user_pass[:20]}...")
            logger.info(f"  üè† –•–æ—Å—Ç:–±–∞–∑–∞: {host_db}")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å URL –Ω–∞ —á–∞—Å—Ç–∏")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ URL: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    logger.info("üîß –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
    try:
        import psycopg2
        conn = psycopg2.connect(database_url)
        logger.info("‚úÖ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!")
        conn.close()
    except Exception as e:
        logger.error(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: {e}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        if "missing" in str(e) and "Name:" in str(e):
            logger.error("üö® –¢–û–ß–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Railway –¥–æ–±–∞–≤–ª—è–µ—Ç 'Name:' –∫ URL!")
            logger.info("üîß –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–≥–æ–µ –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ —É–±–µ—Ä–∏ –ø—Ä–µ—Ñ–∏–∫—Å")

if __name__ == "__main__":
    debug_database_connection()
    
    # –î–µ—Ä–∂–∏–º —Å–∫—Ä–∏–ø—Ç –∂–∏–≤—ã–º
    import time
    logger.info("üí§ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –¥–µ—Ä–∂—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∂–∏–≤—ã–º...")
    while True:
        time.sleep(30)

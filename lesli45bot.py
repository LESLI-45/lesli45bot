#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
LESLI45BOT - –ú–ò–ù–ò–ú–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø
–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ!
"""

import logging
import os
import sys
import requests
import time

# Telegram
import telebot
from telebot import types

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv('TELEGRAM_TOKEN', '7709233981:AAG87qbebbUt4q4SEx1epBvWySlTDAr8zaI')

if not TOKEN:
    logger.error("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    sys.exit(1)

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ webhook
def force_delete_webhook():
    try:
        url = f"https://api.telegram.org/bot{TOKEN}/deleteWebhook"
        requests.get(url, timeout=5)
        logger.info("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
    except:
        logger.info("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å webhook (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)
logger.info("ü§ñ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

@bot.message_handler(commands=['start'])
def start_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ /start"""
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    
    text = f"""üî• –ü—Ä–∏–≤–µ—Ç, {user_name}!

–Ø LESLI45BOT - —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—é!

üéØ –ß—Ç–æ —É–º–µ—é:
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏
‚Ä¢ –°–æ–≤–µ—Ç—ã –ø–æ —Ñ–ª–∏—Ä—Ç—É  
‚Ä¢ –ü–µ—Ä–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –°—Ç–∏–ª–∏ —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—è

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é! üí™"""
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üí¨ –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏", callback_data="perepiska"))
    markup.add(types.InlineKeyboardButton("üì± –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="pervoe"))
    markup.add(types.InlineKeyboardButton("üî• –§–ª–∏—Ä—Ç", callback_data="flirt"))
    
    bot.send_message(message.chat.id, text, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫"""
    responses = {
        "perepiska": "üí¨ **–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏**\n\n–û–ø–∏—à–∏ –∫–∞–∫ –æ–Ω–∞ –æ—Ç–≤–µ—á–∞–µ—Ç:\n‚Ä¢ –ë—ã—Å—Ç—Ä–æ/–º–µ–¥–ª–µ–Ω–Ω–æ?\n‚Ä¢ –î–ª–∏–Ω–Ω—ã–µ/–∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è?\n‚Ä¢ –ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã?\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–º–æ–¥–∑–∏?\n\n–ò —è –¥–∞–º –∞–Ω–∞–ª–∏–∑ –µ—ë –∏–Ω—Ç–µ—Ä–µ—Å–∞!",
        
        "pervoe": "üì± **–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ**\n\n–†–∞—Å—Å–∫–∞–∂–∏:\n‚Ä¢ –ì–¥–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å?\n‚Ä¢ –ß—Ç–æ –æ –Ω–µ–π –∑–Ω–∞–µ—à—å?\n‚Ä¢ –ß—Ç–æ –µ—ë –∑–∞—Ü–µ–ø–∏–ª–æ?\n\n–°–æ—Å—Ç–∞–≤–ª—é –∏–¥–µ–∞–ª—å–Ω–æ–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!",
        
        "flirt": "üî• **–§–ª–∏—Ä—Ç –∏ —Ä–∞–∑–æ–≥—Ä–µ–≤**\n\n–û–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é:\n‚Ä¢ –ù–∞ –∫–∞–∫–æ–π —Å—Ç–∞–¥–∏–∏ –æ–±—â–µ–Ω–∏—è?\n‚Ä¢ –ö–∞–∫ –æ–Ω–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç?\n‚Ä¢ –ß—Ç–æ —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª?\n\n–î–∞–º —Ç–µ—Ö–Ω–∏–∫–∏ —ç—Å–∫–∞–ª–∞—Ü–∏–∏!"
    }
    
    response = responses.get(call.data, "ü§ñ –û–ø–∏—à–∏ —Å–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é!")
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="start"))
    
    bot.edit_message_text(
        response, 
        call.message.chat.id, 
        call.message.message_id,
        reply_markup=markup,
        parse_mode='Markdown'
    )

@bot.message_handler(content_types=['text'])
def handle_text(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞"""
    responses = [
        "üéØ **–°–æ–≤–µ—Ç –æ—Ç –õ–µ—Å–ª–∏:**\n\n–í –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–æ–º–Ω–∏:\n‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å = –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n‚Ä¢ –≠–º–æ—Ü–∏–∏ –≤–∞–∂–Ω–µ–µ –ª–æ–≥–∏–∫–∏\n‚Ä¢ –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–≤—ã—à–∞–µ—Ç —Ü–µ–Ω–Ω–æ—Å—Ç—å\n‚Ä¢ –î–µ–π—Å—Ç–≤—É–π, –Ω–µ –¥—É–º–∞–π —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ!",
        
        "üí° **–ó–æ–ª–æ—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ:**\n\n–û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ —Ç–µ–±—è:\n‚Ä¢ –ü—É—Å—Ç—å –æ–Ω–∞ –±–æ–ª—å—à–µ –ø–∏—à–µ—Ç\n‚Ä¢ –ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã\n‚Ä¢ –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –≤—Å—Ç—Ä–µ—á–∏\n\n–¢–æ–≥–¥–∞ –µ—ë –∏–Ω—Ç–µ—Ä–µ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏! üöÄ",
        
        "üî• **–¢–µ—Ö–Ω–∏–∫–∞ –∫–∞—á–µ–ª–µ–π:**\n\n–ß–µ—Ä–µ–¥—É–π:\n‚Ä¢ –¢–µ–ø–ª–æ ‚Üí –ü—Ä–æ—Ö–ª–∞–¥–∞\n‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å ‚Üí –ë–µ–∑—Ä–∞–∑–ª–∏—á–∏–µ\n‚Ä¢ –ë–ª–∏–∑–æ—Å—Ç—å ‚Üí –î–∏—Å—Ç–∞–Ω—Ü–∏—è\n\n–û–Ω–∞ –±—É–¥–µ—Ç –¥—É–º–∞—Ç—å –æ —Ç–µ–±–µ 24/7! üí≠"
    ]
    
    import random
    response = random.choice(responses)
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üéØ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="start"))
    
    bot.reply_to(message, response, reply_markup=markup, parse_mode='Markdown')

if __name__ == "__main__":
    try:
        logger.info("üöÄ LESLI45BOT –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        
        # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É–¥–∞–ª—è–µ–º webhook
        force_delete_webhook()
        time.sleep(2)
        
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ polling...")
        
        # –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        bot.polling(none_stop=True, interval=1, timeout=20)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
